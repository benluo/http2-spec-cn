        <section anchor="intro" title="Introduction">

            <t>
                The Hypertext Transfer Protocol (HTTP) is a wildly successful protocol. However, the way
                HTTP/1.1 uses the underlying transport (<xref target="RFC7230" x:fmt=","
                                                              x:rel="#connection.management"/>) has several
                characteristics that have a negative overall
                effect on application performance today.
            </t>
            <t>
                In particular, HTTP/1.0 allowed only one request to be outstanding at a time on a given TCP
                connection. HTTP/1.1 added request pipelining, but this only partially addressed request
                concurrency and still suffers from head-of-line blocking. Therefore, HTTP/1.0 and HTTP/1.1
                clients that need to make many requests use multiple connections to a server in order to
                achieve concurrency and thereby reduce latency.
            </t>
            <t>
                Furthermore, HTTP header fields are often repetitive and verbose, causing unnecessary
                network traffic as well as causing the initial
                <xref target="TCP">TCP</xref>
                congestion
                window to quickly fill. This can result in excessive latency when multiple requests are
                made on a new TCP connection.
            </t>
            <t>
                HTTP/2 addresses these issues by defining an optimized mapping of HTTP's semantics to an
                underlying connection. Specifically, it allows interleaving of request and response
                messages on the same connection and uses an efficient coding for HTTP header fields. It
                also allows prioritization of requests, letting more important requests complete more
                quickly, further improving performance.
            </t>
            <t>
                The resulting protocol is more friendly to the network because fewer TCP connections can
                be used in comparison to HTTP/1.x. This means less competition with other flows and
                longer-lived connections, which in turn lead to better utilization of available network
                capacity.
            </t>
            <t>
                Finally, HTTP/2 also enables more efficient processing of messages through use of binary
                message framing.
            </t>
        </section>